import { buildQuery, buildMutation, uploadFile, setAuthHeader, setBaseUrl, getBaseUrl } from './request'
import type { {{ modelImports }} } from "./models";

setBaseUrl('{{baseURL}}')

const s3Providers = {
{{#each s3Provider }}
  {{name}}: {
    "endpoint" : "{{endpoint.staticVariableContent}}",
    "bucketName" : "{{bucketName.staticVariableContent}}",
    "useSSL" : {{useSSL}},
  },
{{/each}}
}


function upload(serverName, filePath, fileName) {
  const s3Config = s3Providers[serverName]
  if (!s3Config) {
    return null
  }
  return uploadFile({
    url: `${getBaseUrl()}/app/main/s3/${serverName}/upload`,
    filePath,
    name: fileName
  }).then(res => {
    const data = JSON.parse(res.data)
    const key = data && data[0] && data[0].key
    const {useSSL, bucketName, endpoint} = s3Config
    return `${useSSL ? `https` : `http`}://${bucketName}.${endpoint}/${key}`
  })
}
export default {
  query: {
  {{#each queries}}
    {{operationName}}: buildQuery<{{operationName}}Response{{#if hasInput}} ,{{operationName}}Input{{/if}}>('/operations/{{operationName}}'),
  {{/each}}
  },

  mutation: {
  {{#each mutations}}
    {{operationName}}: buildMutation<{{operationName}}Response{{#if hasInput}} ,{{operationName}}Input{{/if}}>('/operations/{{operationName}}'),
  {{/each}}
  },
  upload,
  setBaseUrl
}