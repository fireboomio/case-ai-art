{"path":"auth/postAuthentication","depend":null,"script":"\nimport { AuthenticationHookRequest } from 'fireboom-wundersdk/server'\nimport { Client } from 'generated/fireboom.client'\nexport default async function postAuthentication(hook: AuthenticationHookRequest) : Promise\u003cvoid\u003e{\n  if (hook.user?.accessToken?.sub) {\n    const { providerId } = hook.user\n    const {nickname, sub, picture } = hook.user.accessToken\n    const resp = await hook.internalClient.queries.FindOneAppUser({\n      input: {\n        providerUserId: sub,\n        providerId\n      }\n    })\n    const existedUser = resp?.data?.data\n    if (!existedUser) {\n      await hook.internalClient.mutations.CreateOneAppUser({\n        input: {\n          data: {\n            id: sub,\n            providerId,\n            nickname,\n            avatar: picture,\n            phone: '',\n            points: 100\n          }\n        }\n      })\n    }\n  }else  if (hook.user) {\n    const client = new Client({})\n    const { avatarUrl, email, name, nickName, provider, providerId, userId } = hook.user\n    const resp = await client.query.GetOneUser({\n      input: {\n        // provider: provider!,\n        providerId: providerId!,\n        providerUserId: userId!\n      }\n    })\n    if (resp.status === 'ok') {\n      if (!resp.body.errors) {\n        const existedUser = resp.body.data!.data\n        if (!existedUser) {\n          const _name = nickName || name || email!\n          const rest = await client.mutation.CreateOneUser({\n            input: {\n              data: {\n                name: _name,\n                provider: provider!,\n                providerId: providerId!,\n                providerUserId: userId!,\n                avatarUrl: avatarUrl\n              }\n            }\n          })\n          if (rest.status === 'ok') {\n            if (!rest.body.errors) {\n              console.info(`Success sync user: ${providerId} - ${_name}`)\n            }\n          }\n        }\n      }\n    }\n  }\n}","switch":true,"scriptType":"","input":null,"type":""}