{"path":"operations/RecordMyInviter/customResolve","depend":null,"script":"import {HookRequestWithInput} from 'generated/fireboom.hooks'\nimport {InjectedRecordMyInviterInput, RecordMyInviterResponse} from 'generated/models'\nimport { Client } from 'generated/fireboom.client'\nexport default async function customResolve(hook: HookRequestWithInput\u003cInjectedRecordMyInviterInput\u003e)\n  //: Promise\u003cvoid | RecordMyInviterResponse\u003e{ // 取消注释以使用严格的返回类型\n  : Promise\u003cany\u003e {\n  // TODO: 在此处添加代码\n  const currentUser = await hook.internalClient.queries.FindOneAppUser({\n    input: {\n      id: hook.input.userId\n    }\n  })\n  if (!currentUser) {\n    return {\n      data: {}, errors: [{\n        message: '用户不存在'\n      }]\n    }\n  }\n  if (currentUser.data?.data?.AppUser?.id) {\n    return {\n      data: {}, errors: [{\n        message: '已有邀请人'\n      }]\n    }\n  }\n\n  const client = new Client({})\n  // 增加魔法值\n  await client.mutation.CreateOnePointRecord({\n    input: {\n      way:'Invite',\n      point: 0,\n      userId: hook.input.userId\n    }\n  })\n  await client.mutation.CreateOnePointRecord({\n    input: {\n      way:'Invite',\n      point: 0,\n      userId: hook.input.inviterId\n    }\n  })\n}","switch":true,"scriptType":"","input":null,"type":""}